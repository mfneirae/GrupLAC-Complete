def proyectos_grupoextract():
    from settings import my_url, coduapa, codhermes, codcolciencias, nombregi, dnilider, my_url, COD_PRODUCTO
    import bs4, logging, sys, re, init
    global contproyectos_grupo
    LOG_FILENAME = './Logs/Registros.log'
    logging.basicConfig(filename=LOG_FILENAME,level=logging.DEBUG,
        format = "%(asctime)s:%(levelname)s:%(message)s")
    LEVELS = {'debug': logging.DEBUG,
              'info': logging.INFO,
              'warning': logging.WARNING,
              'error': logging.ERROR,
              'critical': logging.CRITICAL}
    if len(sys.argv) > 1:
        level_name = sys.argv[1]
        level = LEVELS.get(level_name, logging.NOTSET)
        logging.basicConfig(level=level)
    from urllib.request import urlopen as uReq
    from bs4 import BeautifulSoup as soup
    uClient = uReq(my_url)
    page_html = uClient.read()
    uClient.close()
    all = 0
    a = 0
    x = 0
    y = 0
    page_soup = soup(page_html,"html.parser")
    containers = page_soup.findAll("table")
    for a in range(0,len(containers)):
        buscaproyectos_grupo = containers[a].td
        #print(buscaproyectos_grupo)
        try:
            if buscaproyectos_grupo.text == "Proyectos":
                all = a
                #print(all)
                break
        except AttributeError:
            pass
    if all != 0:
        containerb = containers[all]
        container = containerb.findAll("tr")
        for x in range(1, len(container)):
            cont = container[x]
            info_proyectos_grupo = cont.text
            index1 = info_proyectos_grupo.find("- ") + 2
            index2 = info_proyectos_grupo.find(':')
            tipo = "119"
            index1 = index2 + 2
            index2 = info_proyectos_grupo.find('\n', index1, len(info_proyectos_grupo))
            nombreart = clc(info_proyectos_grupo[index1:index2])
            index1 = index2 + 2
            index2 = info_proyectos_grupo.find(',', index1, len(info_proyectos_grupo))
            lugar = clc(info_proyectos_grupo[index1:index2])
            index1 = index2 + 2
            index2 = info_proyectos_grupo.find(',', index1, len(info_proyectos_grupo))
            anopub = clc(info_proyectos_grupo[index1:index2])
            try:
                ano = int(anopub)
            except ValueError:
                anopub = ""



            index1 = info_proyectos_grupo.find('Idioma:', index2, len(info_proyectos_grupo)) + 7
            index2 = info_proyectos_grupo.find(',', index1, len(info_proyectos_grupo))
            idioma = clc(info_proyectos_grupo[index1:index2])
            index1 = info_proyectos_grupo.find('Medio de divulgación:', index2, len(info_proyectos_grupo)) + 21
            index2 = info_proyectos_grupo.find('\n', index1, len(info_proyectos_grupo))
            divulgacion = clc(info_proyectos_grupo[index1:index2])
            index1 = info_proyectos_grupo.find('Autores:') + 8
            index2 = info_proyectos_grupo.find('\n', index1, len(info_proyectos_grupo))
            autores = clc(info_proyectos_grupo[index1:index2])
            init.REL_GRUPO_PRODUCTO.append( \
            "REPLACE INTO `uapa_db`.`REL_GRUPO_PRODUCTO`(`CODGP_PROD`,`CODGP`,`GP_TIPO_PROD`,`Nombre_Producto`,`Lugar`,`Año`,`Idioma`,`Páginas`,`Volumen`,`Editorial`,`Ambito`,`DOI`,`Descripción`,`Instituciones`,`Tipo_Vincula_Institu`,`Autores`) VALUES"
            + "('" + str(codcolciencias) + str(COD_PRODUCTO) + "',"\
            + "'" + str(codcolciencias) + "'," \
            + tipo + "," \
            + "'" + nombreart + "'," \
            + "'" + lugar + "'," \
            + anopub + "," \
            + "'" + idioma + "'," \
            + "null" + "," \
            + "null" + "," \
            + "null" + "," \
            + "null" + "," \
            + "null" + "," \
            + "null" + "," \
            + "null" + "," \
            + "null" + "," \
            + "'" + autores + "'" \
            + ");\n")
            init.REL_GRUPO_PRODUCTO_CSV.append(str(codcolciencias) + str(COD_PRODUCTO) +";" \
            + str(codcolciencias) +";" \
            + tipo +";" \
            + nombreart +";" \
            + lugar +";" \
            + anopub +";" \
            + idioma +";" \
            + "" +";" \
            + "" +";" \
            + "" +";" \
            + "" +";" \
            + "" +";" \
            + "" +";" \
            + "" +";" \
            + "" +";" \
            + autores +";" \
            + "\n")
            init.GP_ACTIVIDADES.append( \
            "REPLACE INTO `uapa_db`.`GP_ACTIVIDADES`(`CODGP_PROD_ACT`,`CODGP_PROD`,`Nombre_de_Ferias`,`Fecha_Inicio_Curso`,`Tipo_Orientación`,`Nombre_Estudiante`,`Programa_Académico`,`Divulgacion`,`Valoración`,`Fecha_fin_Curso`,`Finalidad`,`Duración`) VALUES"
            + "('" + str(codcolciencias) + "X" + str(COD_PRODUCTO) + "',"\
            + "'" + str(codcolciencias) + str(COD_PRODUCTO) + "',"\
            + "null" + "," \
            + "null" + "," \
            + "null" + "," \
            + "null" + "," \
            + "null" + "," \
            + "'" + divulgacion + "'," \
            + "null" + "," \
            + "null" + "," \
            + "null" + "," \
            + "null"\
            + ");\n")
            init.GP_ACTIVIDADES_CSV.append(str(codcolciencias) + "X" + str(COD_PRODUCTO) +";" \
            + str(codcolciencias) + str(COD_PRODUCTO) +";" \
            + "" +";" \
            + "" +";" \
            + "" +";" \
            + "" +";" \
            + "" +";" \
            + divulgacion +";" \
            + "" +";" \
            + "" +";" \
            + "" +";" \
            + "" +";" \
            + "\n")
            COD_PRODUCTO += 1
    else:
        logging.info(' El Grupo: ' + nombregi + 'no tiene Esquemas de Cirduitos Trazados Asociados')
    contproyectos_grupo = [COD_PRODUCTO]
